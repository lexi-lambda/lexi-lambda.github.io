http://lexi-lambda.github.io/blog/2016/06/12/four-months-with-haskell/
http://lexi-lambda.github.io/blog/2020/11/01/names-are-not-type-safety/
http://lexi-lambda.github.io/blog/2016/08/11/climbing-the-infinite-ladder-of-abstraction/
http://lexi-lambda.github.io/blog/2017/04/28/lifts-for-free-making-mtl-typeclasses-derivable/
http://lexi-lambda.github.io/blog/2019/11/05/parse-don-t-validate/
http://lexi-lambda.github.io/blog/2019/10/19/empathy-and-subjective-experience-in-programming-languages/
http://lexi-lambda.github.io/blog/2017/05/27/realizing-hackett-a-metaprogrammable-haskell/
http://lexi-lambda.github.io/blog/2015/08/30/managing-application-configuration-with-envy/
http://lexi-lambda.github.io/blog/2016/10/03/using-types-to-unit-test-in-haskell/
http://lexi-lambda.github.io/blog/2016/02/18/simple-safe-multimethods-in-racket/
http://lexi-lambda.github.io/blog/2015/07/18/automatically-deploying-a-frog-powered-blog-to-github-pages/
http://lexi-lambda.github.io/blog/2018/04/15/reimplementing-hackett-s-type-language-expanding-to-custom-core-forms-in-racket/
http://lexi-lambda.github.io/blog/2020/08/13/types-as-axioms-or-playing-god-with-static-types/
http://lexi-lambda.github.io/blog/2015/08/22/deploying-racket-applications-on-heroku/
http://lexi-lambda.github.io/blog/2020/01/19/no-dynamic-type-systems-are-not-inherently-more-open/
http://lexi-lambda.github.io/blog/2019/04/21/defeating-racket-s-separate-compilation-guarantee/
http://lexi-lambda.github.io/blog/2017/01/02/rascal-a-haskell-with-more-parentheses/
http://lexi-lambda.github.io/blog/2021/03/25/an-introduction-to-typeclass-metaprogramming/
http://lexi-lambda.github.io/blog/2018/02/10/an-opinionated-guide-to-haskell-in-2018/
http://lexi-lambda.github.io/blog/2018/09/13/custom-core-forms-in-racket-part-ii-generalizing-to-arbitrary-expressions-and-internal-definitions/
http://lexi-lambda.github.io/blog/2017/10/27/a-space-of-their-own-adding-a-type-namespace-to-hackett/
http://lexi-lambda.github.io/blog/2017/01/05/rascal-is-now-hackett-plus-some-answers-to-questions/
http://lexi-lambda.github.io/blog/2017/08/12/user-programmable-infix-operators-in-racket/
http://lexi-lambda.github.io/blog/2019/09/07/demystifying-monadbasecontrol/
http://lexi-lambda.github.io/blog/2018/10/06/macroexpand-anywhere-with-local-apply-transformer/
http://lexi-lambda.github.io/blog/2016/08/24/understanding-the-npm-dependency-model/
http://lexi-lambda.github.io/blog/2017/06/29/unit-testing-effectful-haskell-with-monad-mock/
http://lexi-lambda.github.io/blog/2015/09/23/canonical-factories-for-testing-with-factory-girl-api/
http://lexi-lambda.github.io/blog/2017/08/28/hackett-progress-report-documentation-quality-of-life-and-snake/
http://lexi-lambda.github.io/blog/2015/12/21/adts-in-typed-racket-with-macros/
http://lexi-lambda.github.io/blog/2015/11/06/functionally-updating-record-types-in-elm/
http://lexi-lambda.github.io/resume.html
